{
    "plugins": ["esformatter-jsx", "esformatter-limit-linebreaks"],
    "jsx": {
        "formatJSX": true, //Duh! that's the default
        "attrsOnSameLineAsTag": false, // move each attribute to its own line
        "maxAttrsOnTag": 1, // if lower or equal than 1 attributes, they will be kept on a single line
        "firstAttributeOnSameLine": false, // keep the first attribute in the same line as the tag
        "formatJSXExpressions": true, // default true, if false jsxExpressions won't be recursively formatted
        "JSXExpressionsSingleLine": true, // default true, if false the JSXExpressions might span several lines
        "alignWithFirstAttribute": false, // do not align attributes with the first tag
        "spaceInJSXExpressionContainers": "", // default to one space. Make it empty if you don't like spaces between JSXExpressionContainers
        "removeSpaceBeforeClosingJSX": false, // default false. if true <React.Something /> => <React.Something/>
        "closingTagOnNewLine": true, // default false. if true attributes on multiple lines will close the tag on a new line
        "JSXAttributeQuotes": "double", // possible values "single" or "double". Leave it as empty string if you don't want to modify the attributes' quotes
        "htmlOptions": { // same as the ones passed to js-beautifier.html
            "space_after_anon_function": false,
            "jslint_happy": true
        }
    },
	"lineBreak" : {
		"after": {
      "ModuleSpecifierClosingBrace": 1,
      "ModuleSpecifierComma": 1,
      "ModuleSpecifierOpeningBrace": 1
		}
	},
    "whiteSpace": {
        "after": {
            "MethodDefinitionName": 1,
            "ArrowFunctionExpressionOpeningBrace": 1,
            "ObjectPatternOpeningBrace": 1
        },
        "before": {
            "ArrowFunctionExpressionClosingBrace": 1,
            "ObjectPatternClosingBrace": 1,
            "ArrayExpressionOpening": 1
        }
    }

}
